name: Flutter CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: 'latest'

  #     - name: Install dependencies
  #       run: flutter pub get

  #     - name: Run tests
  #       run: flutter test

  build_android:
    name: Build Android
    runs-on: ubuntu-latest
    # needs: [test]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Build AppBundle
        run: flutter build appbundle --release

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload AppBundle as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-aab
          path: build/app/outputs/bundle/release/app-release.aab

  build_ios:
    name: Build iOS
    runs-on: macos-latest
    # needs: [test]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'

      - name: Install dependencies
        run: flutter pub get

      - name: Build iOS
        run: flutter build ios --release --no-codesign

      - name: Upload iOS Build as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-ios
          path: build/ios/iphoneos

  build_web:
    name: Build Web
    runs-on: ubuntu-latest
    # needs: [test]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'

      - name: Install dependencies
        run: flutter pub get

      - name: Build Web
        run: flutter build web --release

      - name: Upload Web Build as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-web
          path: build/web

  # release:
  #   name: Create Release
  #   runs-on: ubuntu-latest
  #   needs: [build_android, build_ios, build_web]
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Download APK Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: release-apk
  #         path: .

  #     - name: Download AppBundle Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: release-aab
  #         path: .

  #     - name: Download iOS Build Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: release-ios
  #         path: .

  #     - name: Create GitHub Release
  #       id: create_release
  #       uses: ncipollo/release-action@v1
  #        with:
  #          tag: v${{ github.run_number }}
  #          name: Release ${{ github.run_number }}
  #          body: |
  #            ## Changes
  #            - New release
  #          draft: false
  #          prerelease: false
  #          artifacts: |
  #            app-release.apk
  #            app-release.aab
  #            build/ios/iphoneos/*.app
  #          token: ${{ secrets.GITHUB_TOKEN }}

  # deploy_web:
  #   name: Deploy Web to GitHub Pages
  #   runs-on: ubuntu-latest
  #   needs: [build_web]
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Download Web Build Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: release-web
  #         path: build/web

  #     - name: Deploy to GitHub Pages
  #       uses: peaceiris/actions-gh-pages@v4
  #       with:
  #         github_token: ${{ secrets.GH_TOKEN }}
  #         publish_dir: ./build/web

  # deploy_android:
  #   name: Deploy to Google Play
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: 'latest'

  #     - name: Download AppBundle Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: release-aab
  #         path: .

  #     - name: Decode keystore
  #       run: echo ${{ secrets.KEYSTORE_JKS }} | base64 --decode > release-keystore.jks

  #     - name: Sign the AppBundle
  #       env:
  #         KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
  #         KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
  #         KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
  #       run: |
  #         jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 \
  #         -keystore release-keystore.jks \
  #         -storepass $KEYSTORE_PASSWORD \
  #         -keypass $KEY_PASSWORD \
  #         build/app/outputs/bundle/release/app-release.aab $KEY_ALIAS

  #     - name: Deploy to Google Play
  #       uses: r0adkll/upload-google-play@v1.1.3
  #       with:
  #         serviceAccountJson: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
  #         packageName: com.example.yourapp
  #         releaseFile: build/app/outputs/bundle/release/app-release.aab
  #         track: production